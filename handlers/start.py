from aiogram import Router, types
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder

router = Router()

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    builder = ReplyKeyboardBuilder()
    builder.row(
        types.KeyboardButton(text="/start üöÄ"),
        types.KeyboardButton(text="/quiz üìù"),
        types.KeyboardButton(text="/stats üìä")
    )
    builder.row(
        types.KeyboardButton(text="/help ‚ùì")
    )
    
    await message.answer(
        "üìö <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Python Quiz Bot!</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=builder.as_markup(resize_keyboard=True),
        parse_mode="HTML"
    )
    

# –•—Ä–∞–Ω–∏–º –∫–æ–º–∞–Ω–¥—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
commands = {
    "/start": "–ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ",
    "/quiz": "–ù–∞—á–∞—Ç—å –∫–≤–∏–∑",
    "/stats": "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
    "/help": "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"
}

@router.message(Command("help"))
async def cmd_help(message: types.Message):
    # –í—ã—á–∏—Å–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —à–∏—Ä–∏–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞
    col1_width = max(len(str(i)) for i in range(1, len(commands) + 1))
    col2_width = max(len(cmd) for cmd in commands.keys())
    col3_width = max(len(desc) for desc in commands.values())

    # –£—á–∏—Ç—ã–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    col1_width = max(col1_width, len("‚Ññ"))
    col2_width = max(col2_width, len("–ö–æ–º–∞–Ω–¥–∞"))
    col3_width = max(col3_width, len("–û–ø–∏—Å–∞–Ω–∏–µ"))
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    table = f"| {'‚Ññ'.ljust(col1_width)} | {'–ö–æ–º–∞–Ω–¥–∞'.ljust(col2_width)} | {'–û–ø–∏—Å–∞–Ω–∏–µ'.ljust(col3_width)} |\n"
    table += f"|{'-' * (col1_width + 2)}|{'-' * (col2_width + 2)}|{'-' * (col3_width + 2)}|\n"

    # –°—Ç—Ä–æ–∫–∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    for i, (command, description) in enumerate(commands.items(), start=1):
        table += f"| {str(i).ljust(col1_width)} | {command.ljust(col2_width)} | {description.ljust(col3_width)} |\n"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
    await message.answer(f"```\n{table}\n```", parse_mode="MarkdownV2")
